steps:
# Step 1: Build the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'asia-south1-docker.pkg.dev/$PROJECT_ID/my-python-app-repo/my-app:$SHORT_SHA', '.']

# Step 2: Push the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'asia-south1-docker.pkg.dev/$PROJECT_ID/my-python-app-repo/my-app:$SHORT_SHA']

# Step 3: Authenticate with the GKE cluster
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'container'
  - 'clusters'
  - 'get-credentials'
  - 'my-gke-autopilot-cluster'
  - '--region'
  - 'asia-south1'

# Step 4: Dynamically update the image tag in the deployment manifest
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    sed -i "s|:latest|:$SHORT_SHA|g" kubernetes/deployment.yaml

# Step 5: Apply the updated manifests to the cluster
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: kubectl
  args: ['apply', '-f', 'kubernetes/']

# This section lists the images that will be built by this pipeline
images:
- 'asia-south1-docker.pkg.dev/$PROJECT_ID/my-python-app-repo/my-app:$SHORT_SHA'

# Top-level field to specify the Cloud Storage bucket for logs
logsBucket: 'gs://application-deployment-471707-build-logs'
